@using SmartStore.Admin.Models.CurriculumVitae
@using SmartStore.Core.Domain.Catalog;
@using SmartStore.Web.Framework.UI;

@model SmartStore.Admin.Models.CurriculumVitae.PersonalClientModel

@{
    Html.AddCssFileParts(true, "~/Content/vendors/x-editable/bootstrap-editable.css");
    Html.AppendScriptParts(true, "~/Content/vendors/x-editable/bootstrap-editable.js");
}

@Html.AntiForgeryToken()
@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.CustomerId)
@Html.HiddenFor(model => model.Id)

<div>
    <table class="adminContent mb-2">
        @if (Model.Id != 0)
        {
            <tr>
                <td class="adminTitle">
                    @Html.SmartLabelFor(model => model.Id)
                </td>
                <td class="adminData">
                    @Html.TextBoxFor(model => model.Id, new { @readonly = "readonly", @class = "form-control-plaintext" })
                    @Html.ValidationMessageFor(model => model.Id)
                </td>
            </tr>
            if (Model.CreatedDate.HasValue)
            {
                <tr>
                    <td class="adminTitle">
                        @Html.SmartLabelFor(model => model.CreatedDate)
                    </td>
                    <td class="adminData">
                        <div class="form-control-plaintext">
                            @Html.DisplayFor(model => model.CreatedDate)
                        </div>
                    </td>
                </tr>
            }
            if (Model.ModifiedDate.HasValue)
            {
                <tr>
                    <td class="adminTitle">
                        @Html.SmartLabelFor(model => model.ModifiedDate)
                    </td>
                    <td class="adminData">
                        <div class="form-control-plaintext">
                            @Html.DisplayFor(model => model.ModifiedDate)
                        </div>
                    </td>
                </tr>
            }
        }

        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ClientName)
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => model.ClientName)
                @Html.ValidationMessageFor(model => model.ClientName)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ClientDescription)
            </td>
            <td class="adminData">
                @Html.TextAreaFor(model => model.ClientDescription)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ClientImageId)
            </td>
            <td class="adminData wide" colspan="2">
                @Html.EditorFor(model => model.ClientImageId, new
                {
                    entityId = Model.Id,
                    entityType = "Client",
                    transientUpload = false,
                    album = "catalog",
                    multifile = false,
                    uploadedFiles = Model.ClientMediaFile as IEnumerable<IMediaFile>,
                    typeFilter = "image,video"
                })
                @Html.ValidationMessageFor(model => model.ClientImageId)
            </td>
        </tr>
    </table>
</div>